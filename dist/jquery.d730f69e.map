{"version":3,"sources":["jquery.js"],"names":["window","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","addClass","className","console","log","i","length","classList","add","find","selector","array","elements2","from","concat","oldApi","newApi","each","fn","call","parent","node","indexOf","parentNode","push","print","end","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,GAAgB,UAAUC,eAAV,EAA2B;AACzC;AACA,MAAIC,QAAJ;AACA,MAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACvCC,eAAWC,SAASC,gBAAT,CAA0BH,eAA1B,CAAX;AACD,GAFD,MAEO,IAAIA,2BAA2BI,KAA/B,EAAsC;AAC3C;AACAH,eAAWD,eAAX;AACD;AACD;AACA,SAAO;AACL;AACAK,YAFK,oBAEIC,SAFJ,EAEe;AAClB;AACAC,cAAQC,GAAR,CAAYP,QAAZ;AACA,WAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAIR,SAASS,MAA7B,EAAqCD,GAArC,EAA0C;AACxCR,iBAASQ,CAAT,EAAYE,SAAZ,CAAsBC,GAAtB,CAA0BN,SAA1B;AACD;AACD,aAAO,IAAP;AACD,KATI;AAWLO,QAXK,gBAWAC,QAXA,EAWU;AACb;AACA,UAAIC,QAAQ,EAAZ;AACA,WAAK,IAAIN,IAAI,CAAb,EAAgBA,IAAIR,SAASS,MAA7B,EAAqCD,GAArC,EAA0C;AACxC,YAAMO,YAAYZ,MAAMa,IAAN,CAAWhB,SAASQ,CAAT,EAAYN,gBAAZ,CAA6BW,QAA7B,CAAX,CAAlB;AACAC,gBAAQA,MAAMG,MAAN,CAAaF,SAAb,CAAR;AACD;AACDD,YAAMI,MAAN,GAAe,IAAf,CAPa,CAOQ;AACrB;AACA,UAAMC,SAASrB,OAAOgB,KAAP,CAAf;AACA,aAAOK,MAAP;AACA;AACA;AACA;;AAEA;AACA;;;;AAID,KA/BI;AAgCLC,QAhCK,gBAgCAC,EAhCA,EAgCI;AACP,WAAK,IAAIb,IAAI,CAAb,EAAgBA,IAAIR,SAASS,MAA7B,EAAqCD,GAArC,EAA0C;AACxCa,WAAGC,IAAH,CAAQ,IAAR,EAActB,SAASQ,CAAT,CAAd,EAA2BA,CAA3B;AACD;AACD,aAAO,IAAP;AACD,KArCI;AAsCLe,UAtCK,oBAsCI;AACP,UAAMT,QAAQ,EAAd;AACA,WAAKM,IAAL,CAAU,UAACI,IAAD,EAAU;AAClB,YAAIV,MAAMW,OAAN,CAAcD,KAAKE,UAAnB,MAAmC,CAAC,CAAxC,EAA2C;AACzCZ,gBAAMa,IAAN,CAAWH,KAAKE,UAAhB;AACD;AACF,OAJD;AAKA,aAAO5B,OAAOgB,KAAP,CAAP;AACD,KA9CI;AA+CLc,SA/CK,mBA+CG;AACNtB,cAAQC,GAAR,CAAYP,QAAZ;AACD,KAjDI;;AAkDLkB,YAAQnB,gBAAgBmB,MAlDnB;AAmDLW,OAnDK,iBAmDC;AACJ,aAAO,KAAKX,MAAZ,CADI,CACgB;AACrB,KArDI;AAsDLY,YAtDK,sBAsDM;AACT,UAAMhB,QAAQ,EAAd;AACA,WAAKM,IAAL,CAAU,UAACI,IAAD,EAAU;AAClBV,cAAMa,IAAN,iCAAcH,KAAKM,QAAnB,GADkB,CACY;AAC/B,OAFD;AAGA,aAAOhC,OAAOgB,KAAP,CAAP;AACD;AA5DI,GAAP;AA8DD,CAxED;AAyEA;;AAEA;AACA;AACA","file":"jquery.d730f69e.map","sourceRoot":"../src","sourcesContent":["window.jQuery = function (selectorOrArray) {\n  //第二步  ：同时接受选择器和数组\n  var elements;\n  if (typeof selectorOrArray === \"string\") {\n    elements = document.querySelectorAll(selectorOrArray);\n  } else if (selectorOrArray instanceof Array) {\n    // 第三部 新的element ，修改提升作用域。作用域在花括号内\n    elements = selectorOrArray;\n  }\n  //api可以操作elements，api是一个对象；\n  return {\n    //闭包，函数访问外部的变量\n    addClass(className) {\n      debugger;\n      console.log(elements);\n      for (let i = 0; i < elements.length; i++) {\n        elements[i].classList.add(className);\n      }\n      return this;\n    },\n\n    find(selector) {\n      debugger;\n      let array = [];\n      for (let i = 0; i < elements.length; i++) {\n        const elements2 = Array.from(elements[i].querySelectorAll(selector));\n        array = array.concat(elements2);\n      }\n      array.oldApi = this; //this 是旧的api1\n      //第一步\n      const newApi = jQuery(array);\n      return newApi;\n      //重新创建一个子元素的对象，也就是数组对象api，需要jQuery构造出来.这个过程叫封装对象。\n      //step3\n      //现在只修改子元素，添加属性，同时需要判断\n\n      //step 1\n      /* return array\n        //step2\n        //return array 改为 return this=api\n        //（这个api是find之前一个对象返回的，所以在父元素上修改添加属性） */\n    },\n    each(fn) {\n      for (let i = 0; i < elements.length; i++) {\n        fn.call(null, elements[i], i);\n      }\n      return this;\n    },\n    parent() {\n      const array = [];\n      this.each((node) => {\n        if (array.indexOf(node.parentNode) === -1) {\n          array.push(node.parentNode);\n        }\n      });\n      return jQuery(array);\n    },\n    print() {\n      console.log(elements);\n    },\n    oldApi: selectorOrArray.oldApi,\n    end() {\n      return this.oldApi; // 新的api2\n    },\n    children() {\n      const array = [];\n      this.each((node) => {\n        array.push(...node.children); //把元素拆开（node.children1,node.children2)\n      });\n      return jQuery(array);\n    },\n  };\n};\n//直接返回API这个对象\n\n// （const = api\n//   api = {\n/*  addClass(className){\n              for(let i=0;i<elements.length;i++){     \n              elements[i].classList.add(className)\n          }\n          return this = api\n        }\n      } */\n"]}